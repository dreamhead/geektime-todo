subprojects {
    apply plugin: 'java'

    group = 'com.github.dreamhead.todo'
    version = new Date().format('yyyyMMdd') + '-SNAPSHOT'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.compilerArgs << "-Xlint:unchecked"
        options.compilerArgs << "-Xlint:deprecation"
    }

    repositories {
        mavenCentral()
        maven { url "https://repo.maven.apache.org/maven2" }
    }

    dependencies {
        implementation("com.google.guava:guava:$guavaVersion")
        compileOnly("org.projectlombok:lombok:$lombokVersion")
        annotationProcessor("org.projectlombok:lombok:$lombokVersion")
        implementation("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
        implementation("jakarta.persistence:jakarta.persistence-api:$persistenceVersion")
        implementation("org.springframework:spring-context:$springVersion")
        implementation("org.springframework.data:spring-data-commons:$springBootVersion")

        testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
        testImplementation("org.junit.jupiter:junit-jupiter-params:$junitVersion")
        testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
        testImplementation("org.assertj:assertj-core:$assertJVersion")
        testImplementation("org.mockito:mockito-core:$mockitoVersion")
    }

    test {
        useJUnitPlatform()
    }

    apply from: "$rootDir/gradle/config/scripts/style.gradle"
    apply from: "$rootDir/gradle/config/scripts/coverage.gradle"

    coverage.excludePackages = [
    ]

    coverage.excludeClasses = [
    ]

    style.excludePackages = [
    ]

    style.excludeClasses = [
    ]
}

allprojects {
    apply plugin: 'idea'
}

apply from: "$rootDir/gradle/config/scripts/idea.gradle"

wrapper {
    gradleVersion = '7.2'
}
